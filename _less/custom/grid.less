//
// Grid system
// --------------------------------------------------

// Set the container width, and override it for fixed navbars in media queries
.container {
  .container-fixed();

  @media (min-width: @screen-sm) {
    width: @container-sm;
  }
  @media (min-width: @screen-md) {
    width: @container-md;
  }
}

// mobile first defaults
.row {
  .make-row();
}

// Common styles for small and large grid columns
.make-grid-columns();


// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

.float-grid-columns(all);
.loop-grid-columns(@grid-columns, all, width);
.loop-grid-columns(@grid-columns, all, pull);
.loop-grid-columns(@grid-columns, all, push);
.loop-grid-columns(@grid-columns, all, offset);

@media (min-width: @screen-xs-min) {
  .float-grid-columns(xs);
  .loop-grid-columns(@grid-columns, xs, width);
  .loop-grid-columns(@grid-columns, xs, pull);
  .loop-grid-columns(@grid-columns, xs, push);
  .loop-grid-columns(@grid-columns, xs, offset);
}


// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@media (min-width: @screen-sm-min) {
  .float-grid-columns(sm);
  .loop-grid-columns(@grid-columns, sm, width);
  .loop-grid-columns(@grid-columns, sm, pull);
  .loop-grid-columns(@grid-columns, sm, push);
  .loop-grid-columns(@grid-columns, sm, offset);
}


// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@media (min-width: @screen-md-min) {
  .float-grid-columns(md);
  .loop-grid-columns(@grid-columns, md, width);
  .loop-grid-columns(@grid-columns, md, pull);
  .loop-grid-columns(@grid-columns, md, push);
  .loop-grid-columns(@grid-columns, md, offset);
}

