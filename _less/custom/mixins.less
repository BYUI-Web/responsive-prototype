//
// Mixins
// --------------------------------------------------



// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `@grid-columns`.

.make-grid-columns() {
  // Common styles for all sizes of grid columns, widths 1-12
  .col(@index) when (@index = 1) { // initial
    @item: ~".col-all-@{index}, .col-xs-@{index}, .col-sm-@{index}, .col-md-@{index}, .col-lg-@{index}";
    .col(@index + 1, @item);
  }
  .col(@index, @list) when (@index =< @grid-columns) { // general; "=<" isn't a typo
    @item: ~".col-all-@{index}, .col-xs-@{index}, .col-sm-@{index}, .col-md-@{index}, .col-lg-@{index}";
    .col(@index + 1, ~"@{list}, @{item}");
  }
  .col(@index, @list) when (@index > @grid-columns) { // terminal
    @{list} {
      position: relative;
      // Prevent columns from collapsing when empty
      min-height: 1px;
      // Inner gutter via padding
      padding-left:  (@grid-gutter-width / 2);
      padding-right: (@grid-gutter-width / 2);
    }
  }
  .col(1); // kickstart it
}

.trans(@property:all; @duration:0.5s; @timing:cubic-bezier(0.875, 0.000, 0.330, 1.000); @delay:0){
  -webkit-transition: @property @duration @timing @delay;
  -moz-transition:    @property @duration @timing @delay;
  -o-transition:      @property @duration @timing @delay;
  transition:         @property @duration @timing @delay;
}


.sprite(@id; @isHover:false)  { background:url('/assets/images/sprite.svg') no-repeat 0px 0px;
  & when  (@id="circle-plus") {
      width:33px; height:33px; background-position:-1px -1px;
      & when (@isHover) { background-position:-1px -34px;
    }
  }
  & when  (@id="circle-minus") {
    width:33px; height:33px; background-position:-34px -1px;
      & when (@isHover) { background-position:-34px -34px;}
  }
  & when  (@id="close-btn") {
    width:13px; height:12px; background-position:-71px -40px;
      & when (@isHover) { background-position:-71px -53px;}
  }
}
